import "std.qnp"

void printBlockList():
	std::print("ChunkList:\n")
	std::__MemBlockHeader* curr = std::__memBlocks
	while curr != null:
		std::print(" This: ")
		std::print((u64)curr)

		std::print("\n Prev: ")
		std::print((u64)curr->prev)

		std::print("\n Next: ")
		std::print((u64)curr->next)

		std::print("\n Size: ")
		std::print(curr->sizeAvail)

		std::print("\n DiffToPrev: ")
		if curr->prev != null: std::print((u64)curr - (u64)curr->prev)
		else: std::print("--")

		std::print("\n DiffToNext: ")
		if curr->next != null: std::print((u64)curr->next - (u64)curr)
		else: std::print("--")

		std::print("\n\n")
		curr = curr->next
	std::print("-----------------\n")

i64 brkDiff():
	static i64 lastBrk = 0
	i64 currBrk = std::__brk(0)
	i64 diff = currBrk - lastBrk
	lastBrk = currBrk
	return diff
brkDiff()

void printBrkDiff():
	std::print("BrkDiff: ")
	std::print(brkDiff())
	std::print("\n")

printBlockList()

std::print("Allocating 100 bytes\n")
void* buff1 = std::malloc(100)
printBrkDiff()
printBlockList()
std::print("Allocating 10000 bytes\n")
void* buff2 = std::malloc(10000)
printBrkDiff()
printBlockList()

std::print("Freeing 100 bytes\n")
std::free(buff1)
printBrkDiff()
printBlockList()

std::print("Freeing 10000 bytes\n")
std::free(buff2)
printBrkDiff()
printBlockList()

std::print("Allocating 12000 bytes\n")
buff1 = std::malloc(12000)
printBrkDiff()
printBlockList()

std::print("Freeing 12000 bytes\n")
std::free(buff1)
printBrkDiff()
printBlockList()

std::print("Allocating 1024 megabytes...")
buff1 = std::malloc(1024 * 1024 * 1024)
std::print(" DONE\n")
printBrkDiff()
printBlockList()

std::print("Clearing buff1... ")
u64 begin = std::getTime()
std::memset(buff1, 0, 1024 * 1024 * 1024)
u64 end = std::getTime()
std::print(" DONE\n")
std::print(" -> Time: ")
std::print(end - begin)
std::print(" ms\n")

u8* str = (u8*)"ABCDEFGHIJKLMNOPQRSTUVWXYZ\n"
std::memcpy(str, "..................", 9)
std::print(str)
std::print("-----------------\n")

std::print("Freeing 1024 megabytes...")
std::free(buff1)
std::print(" DONE\n")
printBrkDiff()
printBlockList()

u8* str1 = (u8*)"Hello world, my name is TecStylos!"
u8* tok = std::strtok(str1, " ")
while tok:
	std::print(tok)
	std::print("\n")
	tok = std::strtok(null, " ")

u8 const* str2 = \
	"Hello world, " \
	"my name is TecStylos!\n"
std::print(str2)

i64 const var
*(i64*)&var = 10

std::print(var)

enum Color:
	Red, Green, Blue

std::print((u64)Color::Red)