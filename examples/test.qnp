import "std.qnp"

space std:
	void printChunkList():
		print("ChunkList:\n")
		__MemBlockHeader* curr = __memBlocks
		while curr != null:
			print(" This: ")
			print((u64)curr)

			print("\n Prev: ")
			print((u64)curr->prev)

			print("\n Next: ")
			print((u64)curr->next)

			print("\n Size: ")
			print(curr->sizeAvail)

			print("\n DiffToPrev: ")
			if curr->prev != null:
				print((u64)curr - (u64)curr->prev)
			else:
				print("--")

			print("\n DiffToNext: ")
			if curr->next != null:
				print((u64)curr->next - (u64)curr)
			else:
				print("--")

			print("\n\n")
			curr = curr->next
		print("-----------------\n")

std::printChunkList()

std::print("Allocating buff1...")
void* buff1 = std::malloc(1024)
std::printChunkList()

std::print("Allocating buff2...\n")
void* buff2 = std::malloc(1024 * 4)
std::printChunkList()
std::print("Allocating buff3...\n")
void* buff3 = std::malloc(1024 * 4)
std::printChunkList()
std::print("Allocating buff4...\n")
void* buff4 = std::malloc(1024 * 4)
std::printChunkList()

std::print(" -> ")
std::print((u64)buff1)
std::print("\n")

if buff1 == null:
	std::exit(1)

std::print("Clearing buffer...")
std::memset(buff1, 0, 1024)
std::print(" DONE\n")

std::print("Freeing buff3...")
std::free(buff1)
std::print(" DONE\n")
std::printChunkList()