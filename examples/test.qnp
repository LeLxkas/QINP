import "std.qnp"

space std:
	void printBlockList():
		print("ChunkList:\n")
		__MemBlockHeader* curr = __memBlocks
		while curr != null:
			print(" This: ")
			print((u64)curr)

			print("\n Prev: ")
			print((u64)curr->prev)

			print("\n Next: ")
			print((u64)curr->next)

			print("\n Size: ")
			print(curr->sizeAvail)

			print("\n DiffToPrev: ")
			if curr->prev != null:
				print((u64)curr - (u64)curr->prev)
			else:
				print("--")

			print("\n DiffToNext: ")
			if curr->next != null:
				print((u64)curr->next - (u64)curr)
			else:
				print("--")

			print("\n\n")
			curr = curr->next
		print("-----------------\n")

	i64 brkDiff():
		static i64 lastBrk = 0
		i64 currBrk = __brk(0)
		i64 diff = currBrk - lastBrk
		lastBrk = currBrk
		return diff
	brkDiff()
	
	void printBrkDiff():
		print("BrkDiff: ")
		print(brkDiff())
		print("\n")

std::printBlockList()

std::print("Allocating 100 bytes\n")
void* buff1 = std::malloc(100)
std::printBrkDiff()
std::printBlockList()
std::print("Allocating 10000 bytes\n")
void* buff2 = std::malloc(10000)
std::printBrkDiff()
std::printBlockList()

std::print("Freeing 100 bytes\n")
std::free(buff1)
std::printBrkDiff()
std::printBlockList()

std::print("Freeing 10000 bytes\n")
std::free(buff2)
std::printBrkDiff()
std::printBlockList()

std::print("Allocating 12000 bytes\n")
buff1 = std::malloc(12000)
std::printBrkDiff()
std::printBlockList()

std::print("Freeing 12000 bytes\n")
std::free(buff1)
std::printBrkDiff()
std::printBlockList()

std::print("Allocating 1024 megabytes...")
buff1 = std::malloc(1024 * 1024 * 1024)
std::print(" DONE\n")
std::printBrkDiff()
std::printBlockList()

std::print("Clearing buff1... ")
std::memset(buff1, 0, 1024 * 1024 * 1024)
std::print(" DONE\n")

u8* str = "ABCDEFGHIJKLMNOPQRSTUVWXYZ\n"
std::memset(str, 'A', 9)
std::print(str)
std::print("-----------------\n")

std::print("Freeing 1024 megabytes...")
std::free(buff1)
std::print(" DONE\n")
std::printBrkDiff()
std::printBlockList()
