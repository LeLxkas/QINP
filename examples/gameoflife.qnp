import "std.qnp"

define WIDTH 10
define HEIGHT 10

pack Grid:
	bool cells[WIDTH][HEIGHT]

Grid mainGrid
Grid backGrid

Grid* pMain = &mainGrid
Grid* pBack = &backGrid

void flip():
	Grid* pTemp = pMain
	pMain = pBack
	pBack = pTemp

void show():
	i64 i = 0
	while i < WIDTH:
		i64 j = 0
		while j < HEIGHT:
			if pMain->cells[i][j]:
				print("#")
			else:
				print(" ")
			++j
		print("\n")
		++i

void clear():
	print("\r")
	i64 i = 0
	while i++ < HEIGHT:
		print("\e[1F")

void update():
	i64 i = 0
	while i < WIDTH:
		i64 j = 0
		while j < HEIGHT:
			i64 count = 0
			i64 k = i-1
			while k < i+2:
				i64 l = j-2
				while ++l < j+2:
					if k < 0 || k >= WIDTH:
						continue
					if l < 0 || l >= HEIGHT:
						continue
					if k == i && l == j:
						continue
					if pMain->cells[k][l]:
						++count
				++k
			if pMain->cells[i][j]:
				if count < 2 || count > 3:
					pBack->cells[i][j] = false
				else:
					pBack->cells[i][j] = true
			else:
				if count == 3:
					pBack->cells[i][j] = true
				else:
					pBack->cells[i][j] = false
			++j
		++i

mainGrid.cells[0][2] = true
mainGrid.cells[1][0] = true
mainGrid.cells[1][2] = true
mainGrid.cells[2][1] = true
mainGrid.cells[2][2] = true

i64 n = 30
while --n > 0:
	show()
	update()
	sleep(100)
	clear()
	flip()
show()