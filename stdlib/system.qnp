\\ QINP Standard Library
\\ System

space std:
	define EXIT_SUCCESS 0
	define EXIT_FAILURE 1

	\\ Terminate the calling process and return the specified exit status.
	\\ @param status The exit status to return to the parent process.
	void exit(i32 status)...		\\ Platform dependent implementation

	\\ Get the arguments passed to the program
	\\ @param pargv Address of the pointer where the pointer of the first argument will be stored
	\\ @return The number of arguments passed to the program
	u64 getargs(u8 const*const** pargv)...

	\\ Get the environment variables passed to the program
	\\ @return The pointer to an array of environment variables
	u8 const*const* getenv()...



	u64 getargs(u8 const*const** pargv)!:
		u64 argc
		assembly:
			"mov rcx, [__#argc]"
			"mov [rbp $(argc)], rcx"
		
		if !pargv: return argc

		u8 const*const* argv
		assembly:
			"mov rcx, [__#argv]"
			"mov [rbp $(argv)], rcx"

		*pargv = argv

		return argc

	u8 const*const* getenv()!:
		u8 const*const* env
		assembly:
			"mov rcx, [__#envp]"
			"mov [rbp $(env)], rcx"

		return env

import.linux "platform/linux/system.qnp"
import.windows "platform/windows/system.qnp"